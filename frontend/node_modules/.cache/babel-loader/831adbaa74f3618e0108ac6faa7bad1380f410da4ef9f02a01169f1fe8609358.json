{"ast":null,"code":"var _jsxFileName = \"/Users/giladmeidan/Desktop/financial_ai_agent/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// /frontend/src/components/Dashboard.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [portfolio, setPortfolio] = useState([]);\n  const [stockHistory, setStockHistory] = useState({}); // Store historical data for all stocks\n\n  // Fetch the user's portfolio\n  const fetchPortfolio = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://127.0.0.1:5000/api/portfolio\", {\n        headers: {\n          Authorization: token\n        }\n      });\n      setPortfolio(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Failed to fetch portfolio:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n    }\n  };\n\n  // Fetch historical data for a specific stock\n  const fetchStockHistory = async ticker => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`http://127.0.0.1:5000/api/stock/history/${ticker}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setStockHistory(prev => ({\n        ...prev,\n        [ticker]: response.data // Add data for the ticker\n      }));\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(`Failed to fetch history for ${ticker}:`, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n    }\n  };\n  useEffect(() => {\n    fetchPortfolio();\n  }, []);\n  useEffect(() => {\n    // Fetch historical data for each stock in the portfolio\n    portfolio.forEach(stock => fetchStockHistory(stock.stock_ticker));\n  }, [portfolio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ticker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shares\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: portfolio.map(stock => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: stock.stock_ticker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: stock.shares\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: stock.avg_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, stock.stock_ticker, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stock Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), portfolio.map(stock => {\n      const history = stockHistory[stock.stock_ticker];\n      if (!history) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Loading data for \", stock.stock_ticker, \"...\"]\n      }, stock.stock_ticker, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }, this);\n      const data = {\n        labels: history.map(point => point.Date),\n        // Dates as labels\n        datasets: [{\n          label: `${stock.stock_ticker} Price`,\n          data: history.map(point => point.Close),\n          // Closing prices\n          borderColor: \"rgba(75,192,192,1)\",\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          tension: 0.2 // Smooth curves\n        }]\n      };\n      const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: \"top\"\n          }\n        },\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"month\"\n            }\n          }\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: stock.stock_ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, stock.stock_ticker, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"pRoHypWDg2b0kGx56YpUdEJCkfM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","jsxDEV","_jsxDEV","Dashboard","_s","portfolio","setPortfolio","stockHistory","setStockHistory","fetchPortfolio","token","localStorage","getItem","response","get","headers","Authorization","data","error","_error$response","_error$response$data","console","message","fetchStockHistory","ticker","prev","_error$response2","_error$response2$data","forEach","stock","stock_ticker","children","fileName","_jsxFileName","lineNumber","columnNumber","map","shares","avg_price","history","labels","point","Date","datasets","label","Close","borderColor","backgroundColor","tension","options","responsive","plugins","legend","position","scales","x","type","time","unit","_c","$RefreshReg$"],"sources":["/Users/giladmeidan/Desktop/financial_ai_agent/frontend/src/components/Dashboard.js"],"sourcesContent":["// /frontend/src/components/Dashboard.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Dashboard = () => {\n  const [portfolio, setPortfolio] = useState([]);\n  const [stockHistory, setStockHistory] = useState({}); // Store historical data for all stocks\n\n  // Fetch the user's portfolio\n  const fetchPortfolio = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://127.0.0.1:5000/api/portfolio\", {\n        headers: { Authorization: token },\n      });\n      setPortfolio(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch portfolio:\", error.response?.data?.message);\n    }\n  };\n\n  // Fetch historical data for a specific stock\n  const fetchStockHistory = async (ticker) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`http://127.0.0.1:5000/api/stock/history/${ticker}`, {\n        headers: { Authorization: token },\n      });\n      setStockHistory((prev) => ({\n        ...prev,\n        [ticker]: response.data, // Add data for the ticker\n      }));\n    } catch (error) {\n      console.error(`Failed to fetch history for ${ticker}:`, error.response?.data?.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchPortfolio();\n  }, []);\n\n  useEffect(() => {\n    // Fetch historical data for each stock in the portfolio\n    portfolio.forEach((stock) => fetchStockHistory(stock.stock_ticker));\n  }, [portfolio]);\n\n  return (\n    <div>\n      <h2>Your Portfolio</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Ticker</th>\n            <th>Shares</th>\n            <th>Average Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {portfolio.map((stock) => (\n            <tr key={stock.stock_ticker}>\n              <td>{stock.stock_ticker}</td>\n              <td>{stock.shares}</td>\n              <td>{stock.avg_price}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h3>Stock Performance</h3>\n      {portfolio.map((stock) => {\n        const history = stockHistory[stock.stock_ticker];\n        if (!history) return <p key={stock.stock_ticker}>Loading data for {stock.stock_ticker}...</p>;\n\n        const data = {\n          labels: history.map((point) => point.Date), // Dates as labels\n          datasets: [\n            {\n              label: `${stock.stock_ticker} Price`,\n              data: history.map((point) => point.Close), // Closing prices\n              borderColor: \"rgba(75,192,192,1)\",\n              backgroundColor: \"rgba(75,192,192,0.2)\",\n              tension: 0.2, // Smooth curves\n            },\n          ],\n        };\n\n        const options = {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: \"top\",\n            },\n          },\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"month\",\n              },\n            },\n          },\n        };\n\n        return (\n          <div key={stock.stock_ticker}>\n            <h4>{stock.stock_ticker}</h4>\n            <Line data={data} options={options} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}